searchState.loadedDescShard("Ex1", 0, "A programmable calculator according to the specification …\nA stream of characters regarded as commands to be executed …\nA stack holding integers, floating-point numbers and …\nHandle next command character when in decimal construction …\nThe first character in the command stream, we call it …\nHelper function for testing the internal workings of the …\nHandle next command character when in execution mode\nReturns the argument unchanged.\nHandle next command character when in integer construction …\nCalls <code>U::from(self)</code>.\nCreates a new instance of the calculator, initializes …\nAn integer used in controlling the interpretation of …\nA set of 52 read-only registers named by letters A to Z …\nHandle next command character when in string construction …\nTurns on the calculator and queries for user input\nThe available datatypes of the calculator (Integers, …\nReturns the sum of the two values\nReturns the bitwise and between self and the other value …\nReturns the bitwise and between self and the other value …\nReturns if the other value is Less, Equal or Greater than …\nReturns self divided by the other value (rhs)\nReturns whether two operates are equal to each other …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the product of the two values\nReturns if the other value is Less, Equal or Greater than …\nReturns the remainder of self divided by the other value …\nReturns self minus the the second value (rhs)\nReturns the string representation of the different …")